"""update database

Revision ID: 0cc2bbc1d0d6
Revises: e18c98c58969
Create Date: 2023-11-15 16:33:20.018155

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0cc2bbc1d0d6"
down_revision: Union[str, None] = "e18c98c58969"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "client_tag", "client_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "client_tag", "tag_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "clients",
        "create_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "clients",
        "update_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "mailing_tag", "mailing_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "mailing_tag", "tag_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "mailings",
        "start",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "mailings",
        "message",
        existing_type=sa.VARCHAR(),
        type_=sa.Text(),
        existing_nullable=False,
    )
    op.alter_column(
        "mailings",
        "create_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "messages", "mailing_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "messages", "client_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "messages",
        "send_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "messages",
        "status",
        existing_type=postgresql.ENUM("passed", "failed", name="status"),
        nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "messages",
        "status",
        existing_type=postgresql.ENUM("passed", "failed", name="status"),
        nullable=False,
    )
    op.alter_column(
        "messages",
        "send_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "messages", "client_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "messages", "mailing_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "mailings",
        "create_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "mailings",
        "message",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "mailings",
        "start",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "mailing_tag", "tag_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "mailing_tag", "mailing_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "clients",
        "update_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "clients",
        "create_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "client_tag", "tag_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "client_tag", "client_id", existing_type=sa.INTEGER(), nullable=False
    )
    # ### end Alembic commands ###
