"""updated db

Revision ID: 7c6a71aa112f
Revises: 58a9ce001ca0
Create Date: 2023-11-19 18:20:16.166595

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7c6a71aa112f'
down_revision: Union[str, None] = '58a9ce001ca0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('client_tag', 'client_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('client_tag', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('clients', 'create_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('clients', 'update_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('mailing_tag', 'mailing_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('mailing_tag', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('mailings', 'start',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('mailings', 'message',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('mailings', 'create_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('messages', 'mailing_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('messages', 'client_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('messages', 'send_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('messages', 'status',
               existing_type=postgresql.ENUM('passed', 'failed', name='status'),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('messages', 'status',
               existing_type=postgresql.ENUM('passed', 'failed', name='status'),
               nullable=True)
    op.alter_column('messages', 'send_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('messages', 'client_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('messages', 'mailing_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'mailings', type_='unique')
    op.alter_column('mailings', 'create_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('mailings', 'message',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('mailings', 'start',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('mailing_tag', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('mailing_tag', 'mailing_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('clients', 'update_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('clients', 'create_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('client_tag', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('client_tag', 'client_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
